{"version":3,"sources":["components/app-header/app-header.tsx","components/search-panel/search-panel.tsx","components/post-status-filter/post-status-filter.tsx","components/post-list-item/post-list-item.tsx","components/post-list/post-list.tsx","components/post-add-form/post-add-form.tsx","components/app/app.tsx","index.tsx"],"names":["Header","styled","div","props","colored","AppHeader","liked","allPosts","SearchPanel","type","placeholder","className","onChange","event","onUpdateSearch","target","value","PostStatusFilter","filter","onFilterSelect","useState","todos","setTodos","useEffect","name","label","buttons","map","clazz","onClick","PostListItem","important","like","onDelete","onLiked","onImportant","classNames","PostList","elements","item","id","itemProps","ListGroup","PostAddForm","title","setTitle","addIsNotEmty","onAdd","onKeyPress","key","AppBlock","StyledAppBlock","App","items","searchText","term","setTerm","setFilter","changeItem","field","prev","index","findIndex","elem","old","newItem","slice","length","visiblePosts","filterText","filterPost","indexOf","confirm","todo","newTodo","String","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e09d292.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div<{ colored: boolean }>`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n  h1 {\r\n    font-size: 26px;\r\n    color: ${(props) => (props.colored ? 'green' : 'black')};\r\n    :hover {\r\n      cursor: pointer;\r\n      color: blue;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.2rem;\r\n    color: grey;\r\n  }\r\n`;\r\n\r\ntype Liked = {\r\n  liked: number;\r\n  allPosts: number;\r\n};\r\n/* если хотим изменить div на ссылку например используем as=\"a\" */\r\nconst AppHeader: React.FC<Liked> = ({ liked, allPosts }) => (\r\n  <Header colored>\r\n    <h1>Lyubov Myetolkina</h1>\r\n    <h2>\r\n      {allPosts} items, liked {liked}\r\n    </h2>\r\n  </Header>\r\n);\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './search-panel.css';\r\n\r\ntype SearchProps = {\r\n  onUpdateSearch(term: string): void;\r\n};\r\n\r\nconst SearchPanel: React.FC<SearchProps> = (props) => {\r\n  const changeList = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    props.onUpdateSearch(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <input type=\"text\" placeholder=\"Search by items\" className=\"form-control search-input\" onChange={changeList} />\r\n  );\r\n};\r\n\r\nexport default SearchPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './post-status-filter.css';\r\n\r\ntype Button = {\r\n  name: string;\r\n  label: string;\r\n};\r\n\r\ntype Buttons = {\r\n  filter: string;\r\n  onFilterSelect(name: string): void;\r\n};\r\n\r\nconst PostStatusFilter: React.FC<Buttons> = ({ filter, onFilterSelect }) => {\r\n  const [todos, setTodos] = useState<Button[]>([]);\r\n  useEffect(() => {\r\n    const data = [\r\n      { name: 'all', label: 'All' },\r\n      { name: 'like', label: 'Liked' },\r\n    ] as Button[];\r\n    setTodos(data);\r\n  }, []);\r\n\r\n  const buttons = todos.map(({ name, label }) => {\r\n    const active = filter === name;\r\n    const clazz = active ? 'btn-info' : 'btn-outline-secondary';\r\n    return (\r\n      <button type=\"button\" className={`btn ${clazz}`} key={name} onClick={(): void => onFilterSelect(name)}>\r\n        {label}\r\n      </button>\r\n    );\r\n  });\r\n\r\n  return <div className=\"btn-group\">{buttons}</div>;\r\n};\r\n\r\nexport default PostStatusFilter;\r\n","import React from 'react';\r\n/* import { ILabel } from '../../interfaces'; */\r\nimport './post-list-item.css';\r\n\r\ntype TodoListItem = {\r\n  label: string;\r\n  important: boolean;\r\n  like: boolean;\r\n  onDelete(): void;\r\n  onImportant(): void;\r\n  onLiked(): void;\r\n};\r\n\r\nconst PostListItem: React.FC<TodoListItem> = ({ label, important, like, onDelete, onLiked, onImportant }) => {\r\n  let classNames = 'app-list-item d-flex justify-content-between';\r\n  if (important) {\r\n    classNames += ' important';\r\n  }\r\n\r\n  if (like) {\r\n    classNames += ' like';\r\n  }\r\n  return (\r\n    <div className={classNames}>\r\n      <span className=\"app-list-item-label\" onClick={onLiked}>\r\n        {label}\r\n      </span>\r\n\r\n      <div className=\"d-flex item-buttons\">\r\n        <button className=\"btn-star btn-sm\" onClick={onImportant}>\r\n          <i className=\"fa fa-star\" />\r\n        </button>\r\n        <button className=\"btn-trash btn-sm\" onClick={onDelete}>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n        <i className=\"fa fa-heart\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostListItem;\r\n","import React from 'react';\r\nimport { ListGroup } from 'reactstrap';\r\nimport { ILabel } from '../../interfaces';\r\nimport PostListItem from '../post-list-item/post-list-item';\r\nimport './post-list.css';\r\n\r\ntype TodoListProps = {\r\n  todos: ILabel[];\r\n  onDelete(id: string): void;\r\n  onImportant(id: string): void;\r\n  onLiked(id: string): void;\r\n};\r\n\r\nconst PostList: React.FC<TodoListProps> = ({ todos, onDelete, onImportant, onLiked }) => {\r\n  const elements = todos.map((item: ILabel) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <PostListItem\r\n          {...itemProps}\r\n          onDelete={(): void => onDelete(id)}\r\n          onImportant={(): void => onImportant(id)}\r\n          onLiked={(): void => onLiked(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"btn-group d-flex w-100\">\r\n      <ListGroup className=\"app-list w-100\">{elements}</ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","/* eslint-disable no-console */\r\nimport React, { useState } from 'react';\r\nimport './post-add-form.css';\r\n\r\ninterface TodoFormProps {\r\n  onAdd(title: string): void;\r\n}\r\n\r\nconst PostAddForm: React.FC<TodoFormProps> = (props) => {\r\n  const [title, setTitle] = useState<string>('');\r\n  function addIsNotEmty(): void {\r\n    if (title !== '') {\r\n      props.onAdd(title);\r\n      setTitle('');\r\n    }\r\n  }\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>): void => setTitle(event.target.value);\r\n  const keyPressHandler = (event: React.KeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      addIsNotEmty();\r\n    }\r\n  };\r\n  const addItem = (): void => {\r\n    addIsNotEmty();\r\n  };\r\n\r\n  return (\r\n    <div className=\"bottom-panel d-flex\">\r\n      <input\r\n        className=\"form-control new-post-label\"\r\n        onChange={changeHandler}\r\n        value={title}\r\n        type=\"text\"\r\n        id=\"title\"\r\n        placeholder=\"What do you think?\"\r\n        onKeyPress={keyPressHandler}\r\n      />\r\n      <button className=\"btn btn-outline-primary\" onClick={addItem}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostAddForm;\r\n","/* eslint-disable no-console */\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from '../post-list/post-list';\r\nimport PostAddForm from '../post-add-form/post-add-form';\r\nimport { ILabel } from '../../interfaces';\r\n\r\ndeclare let confirm: (question: string) => boolean;\r\n\r\nconst AppBlock = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1140px;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst StyledAppBlock = styled(AppBlock)`\r\n  background: #e8eaf6;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  const [todos, setTodos] = useState<ILabel[]>([]);\r\n  useEffect(() => {\r\n    const data = [\r\n      { label: 'Going to learn Laravel', important: true, like: true, id: 'ad' },\r\n      { label: 'Going to learn React', important: true, like: true, id: 'ac' },\r\n      { label: 'Going to learn PHP', important: false, like: true, id: 'ab' },\r\n      { label: 'Going to learn Typescript', important: false, like: true, id: 'aa' },\r\n    ] as ILabel[];\r\n    setTodos(data);\r\n  }, []);\r\n  const [term, setTerm] = useState<string>('');\r\n  const [filter, setFilter] = useState<string>('all');\r\n\r\n  const deletItem = (id: string): void => {\r\n    const shoudRemove = confirm('Are you sure to delete this item?');\r\n    if (shoudRemove) {\r\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\r\n    }\r\n  };\r\n\r\n  const addItem = (label: string): void => {\r\n    const newTodo: ILabel = {\r\n      label,\r\n      id: String(Date.now()),\r\n      important: false,\r\n      like: false,\r\n    };\r\n    setTodos((prev) => [newTodo, ...prev]);\r\n  };\r\n\r\n  const changeItem = (id: string, field: boolean, prev: ILabel[]): ILabel[] => {\r\n    const index = prev.findIndex((elem) => elem.id === id);\r\n    const old = prev[index];\r\n    const newItem = field ? { ...old, important: !old.important } : { ...old, like: !old.like };\r\n    const newArr = [...prev.slice(0, index), newItem, ...prev.slice(index + 1)];\r\n    return newArr;\r\n  };\r\n\r\n  const toggleImportant = (id: string): void => {\r\n    setTodos((prev) => changeItem(id, true, prev));\r\n  };\r\n\r\n  const toggleLiked = (id: string): void => {\r\n    setTodos((prev) => changeItem(id, false, prev));\r\n  };\r\n\r\n  const liked = todos.filter((item) => item.like).length;\r\n  const allPosts = todos.length;\r\n  const searchPost = (items: ILabel[], searchText: string): ILabel[] => {\r\n    if (searchText.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => item.label.indexOf(searchText) > -1);\r\n  };\r\n\r\n  const updateSearch = (title: string): void => {\r\n    setTerm(title);\r\n  };\r\n\r\n  const filterPost = (items: ILabel[], filterText: string): ILabel[] => {\r\n    if (filterText === 'like') {\r\n      return items.filter((item) => item.like);\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const onFilterSelect = (title: string): void => {\r\n    setFilter(title);\r\n  };\r\n\r\n  const visiblePosts = filterPost(searchPost(todos, term), filter);\r\n  // console.log(visiblePosts);\r\n  return (\r\n    <StyledAppBlock>\r\n      <AppHeader liked={liked} allPosts={allPosts} />\r\n      <div className=\"search-panel d-flex\">\r\n        <SearchPanel onUpdateSearch={updateSearch} />\r\n        <PostStatusFilter filter={filter} onFilterSelect={onFilterSelect} />\r\n      </div>\r\n      <PostList todos={visiblePosts} onDelete={deletItem} onImportant={toggleImportant} onLiked={toggleLiked} />\r\n      <PostAddForm onAdd={addItem} />\r\n    </StyledAppBlock>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}